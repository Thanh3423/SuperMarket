

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Thanh
 */
public class Selling extends javax.swing.JFrame {
    Double Uprice, ProTot =0.0, GrdTotal = 0.0;
    private Connection conn;
    private Statement St;
    private ResultSet Rs;
    private int SelId;
    String content = "";
    String totalPriceText = "";
    private int loggedInUserId;
     public Selling(int loggedInUserId) {
        initComponents();
        SelectSeller();
        GetCat();
        this.loggedInUserId = loggedInUserId;
        this.SelId = loggedInUserId;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ProdName = new javax.swing.JTextField();
        ProdQty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CatCb = new javax.swing.JComboBox<>();
        AddBtn = new javax.swing.JButton();
        PrintBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        Filterbtn = new javax.swing.JButton();
        Bill = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTxt = new javax.swing.JTextArea();
        Grdtotallbl = new javax.swing.JLabel();
        AddInvoicebtn = new javax.swing.JButton();
        ClearInvoiceBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Logout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(153, 204, 255));
        jLabel1.setFont(new java.awt.Font(".VnBlackH", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 153, 255));
        jLabel1.setText("BILLING POINT");

        ProdName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ProdName.setFocusable(false);

        ProdQty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel5.setBackground(new java.awt.Color(153, 204, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("NAME");

        jLabel6.setBackground(new java.awt.Color(153, 204, 255));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("QUANTITY");

        CatCb.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        CatCb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CatCbMouseClicked(evt);
            }
        });

        AddBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AddBtn.setText("Add To Bill");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });

        PrintBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        PrintBtn.setText("Print");
        PrintBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintBtnMouseClicked(evt);
            }
        });

        DeleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        DeleteBtn.setText("Refresh");
        DeleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshBtnMouseClicked(evt);
            }
        });

        ClearBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ClearBtn.setText("Clear");
        ClearBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearBtnMouseClicked(evt);
            }
        });

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "QUANTITY", "PRICE", "CATEGORY"
            }
        ));
        ProductTable.setRowHeight(25);
        ProductTable.setSelectionBackground(new java.awt.Color(153, 204, 255));
        ProductTable.setShowHorizontalLines(true);
        ProductTable.setShowVerticalLines(true);
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductTable);

        jLabel2.setBackground(new java.awt.Color(153, 204, 255));
        jLabel2.setFont(new java.awt.Font(".VnBlackH", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("PRODUCTS LIST");

        Filterbtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Filterbtn.setText("Filter");
        Filterbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FilterbtnMouseClicked(evt);
            }
        });

        Bill.setBackground(new java.awt.Color(255, 255, 255));
        Bill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jScrollPane2.setBorder(null);

        BillTxt.setColumns(20);
        BillTxt.setRows(5);
        BillTxt.setBorder(null);
        jScrollPane2.setViewportView(BillTxt);

        Grdtotallbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Grdtotallbl.setText("RS ");

        javax.swing.GroupLayout BillLayout = new javax.swing.GroupLayout(Bill);
        Bill.setLayout(BillLayout);
        BillLayout.setHorizontalGroup(
            BillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Grdtotallbl)
                .addGap(169, 169, 169))
        );
        BillLayout.setVerticalGroup(
            BillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Grdtotallbl))
        );

        AddInvoicebtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        AddInvoicebtn.setText(" Add Invoice");
        AddInvoicebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddInvoicebtnActionPerformed(evt);
            }
        });

        ClearInvoiceBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ClearInvoiceBtn.setText("Clear Invoice");
        ClearInvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearInvoiceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                .addComponent(ProdQty, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(AddBtn)
                        .addGap(50, 50, 50)
                        .addComponent(ClearBtn)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(142, 142, 142))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Bill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                            .addGap(18, 18, 18)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(CatCb, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(Filterbtn)
                        .addGap(27, 27, 27)
                        .addComponent(DeleteBtn)
                        .addGap(35, 35, 35))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddInvoicebtn)
                .addGap(45, 45, 45)
                .addComponent(PrintBtn)
                .addGap(35, 35, 35)
                .addComponent(ClearInvoiceBtn)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CatCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteBtn)
                    .addComponent(Filterbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(Bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrintBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddInvoicebtn)
                    .addComponent(ClearInvoiceBtn))
                .addGap(28, 28, 28))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(104, 104, 104)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProdName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProdQty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setBackground(new java.awt.Color(153, 204, 255));
        jLabel11.setFont(new java.awt.Font(".VnArialH", 1, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("X");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        Logout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Logout.setForeground(new java.awt.Color(255, 255, 255));
        Logout.setText("Logout");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Logout)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Logout))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
// </editor-fold>   

    public void SelectSeller(){
        try {
            conn = new Connect().getConnection();
            St = conn.createStatement();
            Rs = St.executeQuery("select * from producttbl");
            DefaultTableModel model = (DefaultTableModel) ProductTable.getModel();
            model.setRowCount(0); // Xóa dữ liệu cũ trong bảng
            while (Rs.next()) {
                Object[] rowData = new Object[5]; // Số lượng cột
                rowData[0] = Rs.getString(1); // Lấy giá trị từ cột 1
                rowData[1] = Rs.getString(2); // Lấy giá trị từ cột 2
                rowData[2] = Rs.getString(3);
                rowData[3] = Rs.getString(4);
                rowData[4] = Rs.getString(5);
                // Lấy giá trị từ các cột khác và gán vào mảng rowData

                model.addRow(rowData);
}
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int prid, newQty;
    public void update(){
        try {
                conn = new Connect().getConnection();
                String Query = "UPDATE producttbl SET ProdQty="+newQty+""+" WHERE ProdId="+prid;
                St = conn.createStatement();
                St.executeUpdate(Query);
                SelectSeller();
                //JOptionPane.showMessageDialog(this, "Product Updated");
            } catch (Exception e) {
                e.printStackTrace();
            }
    }
   
  
    private void PrintBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBtnMouseClicked
       try {
            printPanel(Bill);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_PrintBtnMouseClicked

   private void printPanel(JPanel Bill) {
    // Tạo một Job in
    PrinterJob printerJob = PrinterJob.getPrinterJob();
    printerJob.setPrintable(new Printable() {
        @Override
        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
            if (pageIndex > 0) {
                return NO_SUCH_PAGE;
            }

            Graphics2D g2d = (Graphics2D) graphics;

            // Lấy kích thước của trang in
            double pageWidth = pageFormat.getImageableWidth();
            double pageHeight = pageFormat.getImageableHeight();

            // Lấy kích thước của component
            Dimension componentSize = Bill.getSize();

            // Tính toán vị trí để vẽ component vào trung tâm của trang in
            double x = (pageWidth - componentSize.getWidth()) / 2;
            double y = (pageHeight - componentSize.getHeight()) / 2;

            // Đặt vị trí bắt đầu vẽ
            g2d.translate(pageFormat.getImageableX() + x, pageFormat.getImageableY() + y);

            // Vẽ component lên đối tượng Graphics2D
            Bill.paint(g2d);

            return PAGE_EXISTS;
        }
    });

    // Hiển thị hộp thoại in
    if (printerJob.printDialog()) {
        try {
            printerJob.print();
        } catch (PrinterException e) {
            e.printStackTrace();
        }
    }
}
    private void RefreshBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshBtnMouseClicked
          SelectSeller();     
    }//GEN-LAST:event_RefreshBtnMouseClicked

    private void ClearBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearBtnMouseClicked
       
        ProdName.setText("");
        ProdQty.setText("");
    }//GEN-LAST:event_ClearBtnMouseClicked

   int AvailQty;
    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel11MouseClicked
    private void GetCat()
    {
        try {
            conn = new Connect().getConnection();
            St = conn.createStatement();
            Rs = St.executeQuery("select * from categorytbl");
            while(Rs.next())
            {
                String Mycat = Rs.getString("CatName");
                CatCb.addItem(Mycat);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) ProductTable.getModel();
        int Myindex = ProductTable.getSelectedRow();
        
        prid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName.setText(model.getValueAt(Myindex,1).toString());
        Uprice = Double.valueOf(model.getValueAt(Myindex, 3).toString());
        AvailQty = Integer.valueOf(model.getValueAt(Myindex, 2).toString());
       
    
    }//GEN-LAST:event_ProductTableMouseClicked
  int i= 0;
    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
        
        if(ProdQty.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Missing Information");
        }else if (!isNumeric(ProdQty.getText())) {
        JOptionPane.showMessageDialog(this, "Invalid Quantity: Please enter a numeric value");
        }
        else if(AvailQty < Integer.valueOf(ProdQty.getText())){
            JOptionPane.showMessageDialog(this, "Not Enough In Stock");
        }
        else{
            i++;
            ProTot = Uprice * Integer.valueOf(ProdQty.getText());
            GrdTotal = GrdTotal + ProTot;
            newQty = AvailQty - Integer.valueOf(ProdQty.getText());
            if( i == 1){
                BillTxt.setText(BillTxt.getText()+"\t\t--------FAMILY POINT--------\n"+"    "+"NUM\t PRODUCT\t PRICE\t QUANTITY\t TOTAL\n"+"    "+i+"\t "+ProdName.getText()+"\t "+Uprice+"\t "+ProdQty.getText()+"\t "+ProTot+"\n");
            }
            else{
                BillTxt.setText(BillTxt.getText()+"    "+i+"\t "+ProdName.getText()+"\t "+Uprice+"\t "+ProdQty.getText()+"\t "+ProTot+"\n");

            }
            Grdtotallbl.setText("Rs: " + GrdTotal);
            update();
        }
    }//GEN-LAST:event_AddBtnMouseClicked
    private boolean isNumeric(String text) {
        try {
        Integer.parseInt(text);
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
    }
    private void CatCbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CatCbMouseClicked
        try {
            conn = new Connect().getConnection();
            St = conn.createStatement();
            Rs = St.executeQuery("select * from producttbl where ProdCat='"+ CatCb.getSelectedItem().toString()+"'");
            DefaultTableModel model = (DefaultTableModel) ProductTable.getModel();
            model.setRowCount(0); // Xóa dữ liệu cũ trong bảng
            while (Rs.next()) {
                Object[] rowData = new Object[5]; // Số lượng cột
                rowData[0] = Rs.getString(1); // Lấy giá trị từ cột 1
                rowData[1] = Rs.getString(2); // Lấy giá trị từ cột 2
                rowData[2] = Rs.getString(3);
                rowData[3] = Rs.getString(4);
                rowData[4] = Rs.getString(5);
                // Lấy giá trị từ các cột khác và gán vào mảng rowData

                model.addRow(rowData);
}
        } catch (Exception e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_CatCbMouseClicked

    private void FilterbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FilterbtnMouseClicked
        try {
            conn = new Connect().getConnection();
            St = conn.createStatement();
            Rs = St.executeQuery("select * from producttbl where ProdCat='"+ CatCb.getSelectedItem().toString()+"'");
            DefaultTableModel model = (DefaultTableModel) ProductTable.getModel();
            model.setRowCount(0); // Xóa dữ liệu cũ trong bảng
            while (Rs.next()) {
                Object[] rowData = new Object[5]; // Số lượng cột
                rowData[0] = Rs.getString(1); // Lấy giá trị từ cột 1
                rowData[1] = Rs.getString(2); // Lấy giá trị từ cột 2
                rowData[2] = Rs.getString(3);
                rowData[3] = Rs.getString(4);
                rowData[4] = Rs.getString(5);
                // Lấy giá trị từ các cột khác và gán vào mảng rowData

                model.addRow(rowData);
}
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_FilterbtnMouseClicked

    private void LogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMouseClicked
       new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutMouseClicked
      

    private void AddInvoicebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddInvoicebtnActionPerformed
     PreparedStatement addInvoice = null;
    int rsc = 0;
    try {
        conn = new Connect().getConnection();
        String sql = "INSERT INTO Selling (SelId, Content, total_price) VALUES (?, ?, ?)";
        addInvoice = conn.prepareStatement(sql);
       
        
        // Lấy nội dung từ BillTxt và gán vào content
        content = BillTxt.getText();
        
        // Lấy giá trị từ Grdtotallbl và gán vào totalPriceText
        totalPriceText = Grdtotallbl.getText().replace("Rs: ", ""); // Loại bỏ chữ "Rs: " để chỉ lấy giá trị số
        
        // Kiểm tra xem chuỗi totalPriceText có rỗng không trước khi chuyển đổi
        if (!totalPriceText.isEmpty()) {
            addInvoice.setInt(1, loggedInUserId);
            addInvoice.setString(2, content);
            addInvoice.setDouble(3, Double.parseDouble(totalPriceText));
        } else {
            JOptionPane.showMessageDialog(this, "Total price is empty");
            return; // Trả về ngay nếu giá trị total_price rỗng
        }
        
        rsc = addInvoice.executeUpdate();
        if (rsc > 0) {
            JOptionPane.showMessageDialog(this, "Invoice Added Successfully");
        } else {
            JOptionPane.showMessageDialog(this, "Failed to add invoice");
        }
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_AddInvoicebtnActionPerformed

    private void ClearInvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearInvoiceBtnActionPerformed
        BillTxt.setText("");
        Grdtotallbl.setText("");
        i = 0;
    }//GEN-LAST:event_ClearInvoiceBtnActionPerformed

   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AddInvoicebtn;
    private javax.swing.JPanel Bill;
    private javax.swing.JTextArea BillTxt;
    private javax.swing.JComboBox<String> CatCb;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton ClearInvoiceBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton Filterbtn;
    private javax.swing.JLabel Grdtotallbl;
    private javax.swing.JLabel Logout;
    private javax.swing.JButton PrintBtn;
    private javax.swing.JTextField ProdName;
    private javax.swing.JTextField ProdQty;
    private javax.swing.JTable ProductTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    

  
}
